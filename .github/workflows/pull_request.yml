name: Swift

on:
  pull_request:
    types: [opened, reopened, synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate_format_config:
    name: Validate Format Config
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install apt dependencies
        run: sudo apt-get -qq update && sudo apt-get -qq -y install curl

      - name: Compare against swift-mmio swift-format config
        run: |
          curl -sL https://raw.githubusercontent.com/apple/swift-mmio/refs/heads/main/.swift-format -o .swift-format-mmio
          diff .swift-format .swift-format-mmio

  tests:
    name: Test
    uses: swiftlang/github-workflows/.github/workflows/swift_package_test.yml@main
    with:
      enable_macos_checks: true
      linux_build_command: swift test --configuration release
      windows_pre_build_command: swift test --configuration release
      windows_build_command: swift test --configuration release

  soundness:
    name: Soundness
    uses: swiftlang/github-workflows/.github/workflows/soundness.yml@main
    with:
      api_breakage_check_enabled: false  # this repo isn't API stable yet
      docs_check_enabled: false  # too slow
      format_check_container_image: swiftlang/swift:nightly-main
      license_header_check_enabled: false  # feature: https://github.com/swiftlang/github-workflows/issues/78
      license_header_check_project_name: "Swift.org"  # bug: https://github.com/swiftlang/github-workflows/issues/76

  # test:
  #   name: Swift (${{ matrix.swift.version }}) / Ubuntu (${{ matrix.os.version }})
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       os:
  #         - name: jammy
  #           version: "22.04"
  #       swift:
  #         - repo: swiftlang/swift
  #           version: "nightly-6.1"
  #         - repo: swiftlang/swift
  #           version: "nightly-main"
  #   container: ${{ matrix.swift.repo }}:${{ matrix.swift.version }}-${{ matrix.os.name }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Install Dependencies
  #       run: apt-get -qq update && apt-get -qq -y install make
  #     - name: Build & Test
  #       run: make test CONFIGURATION=release

